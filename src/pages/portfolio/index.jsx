// import Curve from "@/components/Layout/Curve";
// import Head from "next/head";
// import Double from "@/components/custom/double";
// import { projects } from "@/data";
// import { LocomotiveScrollProvider } from "react-locomotive-scroll";
// import { useRef } from "react";
// export default function Contact() {
//   const ref = useRef(null);

//   const options = {
//     smooth: true,
//   };
//   return (
//     <LocomotiveScrollProvider options={options} containerRef={ref}>
//       <Head>
//         <title>Create Next App</title>
//         <meta name="description" content="Generated by create next app" />
//         <meta name="viewport" content="width=device-width, initial-scale=1" />
//         <link rel="icon" href="/favicon.ico" />
//       </Head>
//       <Curve backgroundColor="#0f172a">
//         <div className="data-scroll-container ref={ref}">
//           <div data-scroll-section ref={ref}>
//             <Double projects={[projects[2], projects[3]]} reversed={true} />
//           </div>
//           <div data-scroll-section ref={ref}>
//             <Double projects={[projects[0], projects[1]]} />
//           </div>

//           <div data-scroll-section ref={ref}>
//             <Double projects={[projects[4], projects[5]]} />
//           </div>
//           <div data-scroll-section ref={ref}>
//             <Double projects={[projects[6], projects[7]]} reversed={true} />
//           </div>
//           <div data-scroll-section ref={ref}>
//             <Double projects={[projects[8], projects[9]]} />
//           </div>
//           <div data-scroll-section ref={ref}>
//             <Double projects={[projects[10], projects[11]]} reversed={true} />
//           </div>
//           <div data-scroll-section ref={ref}>
//             <Double projects={[projects[12], projects[13]]} reversed={true} />
//           </div>
//           <div data-scroll-section ref={ref}>
//             <Double projects={[projects[14], projects[12]]} reversed={true} />
//           </div>
//         </div>
//       </Curve>
//     </LocomotiveScrollProvider>
//   );
// }




























import Curve from "@/components/Layout/Curve";
import Head from "next/head";
import Double from "@/components/custom/double";
import { projects } from "@/data";
import { LocomotiveScrollProvider } from "react-locomotive-scroll";
import { useRef, useEffect } from "react";

export default function Contact() {
  const containerRef = useRef(null);

  const options = {
    smooth: true,
    multiplier: 0.1, // Adjust this value to control the scroll speed
  };

  useEffect(() => {
    console.log('Container Ref:', containerRef.current);
    console.log('Container Offset Height:', containerRef.current?.offsetHeight);
  }, []); // The empty dependency array ensures this effect runs only once on mount

  return (
    <LocomotiveScrollProvider options={{smooth: true,}}
    watch={[]} containerRef={containerRef}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Curve backgroundColor="#0f172a">
        <div className="data-scroll-container" ref={containerRef}>
          <div data-scroll-section ref={useRef(null)}>
            <Double projects={[projects[1], projects[3]]} reversed={true} />
          </div>
          <div data-scroll-section ref={useRef(null)}>
            <Double projects={[projects[0], projects[2]]} />
          </div>
          <div data-scroll-section ref={useRef(null)}>
            <Double projects={[projects[4], projects[5]]} />
          </div>
          <div data-scroll-section ref={useRef(null)}>
            <Double projects={[projects[13], projects[7]]} reversed={true} />
          </div>
          <div data-scroll-section ref={useRef(null)}>
            <Double projects={[projects[8], projects[9]]} />
          </div>
          <div data-scroll-section ref={useRef(null)}>
            <Double projects={[projects[10], projects[11]]} reversed={true} />
          </div>
          <div data-scroll-section ref={useRef(null)}>
            <Double projects={[projects[12], projects[6]]} reversed={true} />
          </div>
          {/* <div data-scroll-section ref={useRef(null)}>
            <Double projects={[projects[14], projects[12]]} reversed={true} />
          </div> */}
        </div>
      </Curve>
    </LocomotiveScrollProvider>
  );
}
